<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
    <metadata>
        <id>FsPickler</id>
        <version>0.8.5.3</version>
        <title>FsPickler</title>
        <authors>Eirik Tsarpalis</authors>
        <owners>Eirik Tsarpalis</owners>
        <copyright>Eirik Tsarpalis</copyright>
        <projectUrl>https://github.com/eiriktsarpalis/FsPickler/</projectUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <iconUrl>http://www.m-brace.net/media/pickler.jpg</iconUrl>
        <licenseUrl>https://github.com/eiriktsarpalis/FsPickler/blob/master/License.md</licenseUrl>
        <description>* Based on the notion of pickler combinators.
* Provides an automated, strongly typed, pickler generation framework.
* Full support for .NET types, including classes and open hierarchies.
* Compatible with all serializable types, including the ISerializable interface.
* Highly optimized for F# core types.
* Performance about 5-20x faster than the default .NET serializers.
* Full support for the mono framework.

Provided "as is" with no express or implied warranty.

For more information, see https://github.com/eiriktsarpalis/FsPickler</description>
        <summary>A fast, general-purpose binary serializer for .NET written in F# that doubles as a pickler combinator library.</summary>
        <releaseNotes>* Minor corrections.</releaseNotes>
        <tags>F#, serializer, pickler combinators</tags>
    </metadata>
   <files>
     <file src="..\build\net40\FsPickler.dll" target="lib\net40" />
     <file src="..\build\net40\FsPickler.xml" target="lib\net40" />
     <!--<file src="..\build\net45\FsPickler.dll" target="lib\net45" />
     <file src="..\build\net45\FsPickler.xml" target="lib\net45" />-->
   </files>
</package>
