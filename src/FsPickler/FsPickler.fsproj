<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>3ad987bf-f0fa-40bd-9dae-4af3a5fe9cc7</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>MBrace.FsPickler</RootNamespace>
    <AssemblyName>FsPickler</AssemblyName>
    <Name>FsPickler</Name>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
    <OutputPath Condition="'$(OutputPath)' == ''">bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;OPTIMIZE_FSHARP;PROTECT_STACK_OVERFLOWS;EMIT_IL</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>..\..\bin\FsPickler.xml</DocumentationFile>
    <OutputPath>..\..\bin\</OutputPath>
    <OtherFlags>--warnon:1182</OtherFlags>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <OutputPath>..\..\bin\</OutputPath>
    <DefineConstants>TRACE;PROTECT_STACK_OVERFLOWS;OPTIMIZE_FSHARP;EMIT_IL</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>..\..\bin\FsPickler.xml</DocumentationFile>
    <OtherFlags>--warnon:1182</OtherFlags>
  </PropertyGroup>
  <PropertyGroup>
    <MinimumVisualStudioVersion Condition="'$(MinimumVisualStudioVersion)' == ''">11</MinimumVisualStudioVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'PerfTests|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <DefineConstants>TRACE;PROTECT_STACK_OVERFLOWS;OPTIMIZE_FSHARP;EMIT_IL</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>bin\Release\FsPickler.xml</DocumentationFile>
    <OutputPath>bin\PerfTests\</OutputPath>
    <OtherFlags>--warnon:1182</OtherFlags>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'NoEmit|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <DefineConstants>TRACE;PROTECT_STACK_OVERFLOWS;OPTIMIZE_FSHARP</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>..\..\bin\NoEmit\FsPickler.XML</DocumentationFile>
    <OutputPath>..\..\bin\NoEmit</OutputPath>
    <OtherFlags>--warnon:1182</OtherFlags>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release-NET40|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <DefineConstants>TRACE;PROTECT_STACK_OVERFLOWS;OPTIMIZE_FSHARP;EMIT_IL;NET40</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>..\..\bin\net40\FsPickler.xml</DocumentationFile>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile />
    <OtherFlags>--warnon:1182</OtherFlags>
    <OutputPath>..\..\bin\net40</OutputPath>
  </PropertyGroup>
  <Import Project="$(FSharpTargetsPath)" Condition="Exists('$(FSharpTargetsPath)')" />
  <ItemGroup>
    <Compile Include="..\..\paket-files\eiriktsarpalis\TypeShape\src\TypeShape\TypeShape.fs">
      <Paket>True</Paket>
      <Link>TypeShape/TypeShape.fs</Link>
    </Compile>
    <Compile Include="AssemblyInfo.fs" />
    <Compile Include="Utils\CsharpProxy.fs" />
    <Compile Include="Utils\Utils.fs" />
    <Compile Include="Utils\Emit.fs" />
    <Compile Include="Utils\Reflection.fs" />
    <Compile Include="Utils\ShallowCopy.fs" />
    <Compile Include="Utils\Hashing.fs" />
    <Compile Include="Pickler\Types.fs" />
    <Compile Include="Pickler\PickleFormat.fs" />
    <Compile Include="Pickler\ReflectionCache.fs" />
    <Compile Include="Pickler\Pickler.fsi" />
    <Compile Include="Pickler\Pickler.fs" />
    <Compile Include="Pickler\PrimitivePicklers.fs" />
    <Compile Include="Pickler\CompositePickler.fs" />
    <Compile Include="Pickler\UnionCaseHelper.fs" />
    <Compile Include="Pickler\ReflectionPicklers.fs" />
    <Compile Include="Combinators\Wrappers.fs" />
    <Compile Include="Combinators\Sequence.fs" />
    <Compile Include="Combinators\Array.fs" />
    <Compile Include="Combinators\Tuple.fs" />
    <Compile Include="Combinators\FSharpList.fs" />
    <Compile Include="Combinators\DotNetTypes.fs" />
    <Compile Include="Combinators\FSharpTypes.fs" />
    <Compile Include="Combinators\Collections.fs" />
    <Compile Include="PicklerGeneration\PicklerRegistry.fs" />
    <Compile Include="PicklerGeneration\PicklerEmit.fs" />
    <Compile Include="PicklerGeneration\FieldPicklers.fs" />
    <Compile Include="PicklerGeneration\ISerializablePickler.fs" />
    <Compile Include="PicklerGeneration\DataContractPickler.fs" />
    <Compile Include="PicklerGeneration\FSharpTypeGen.fs" />
    <Compile Include="PicklerGeneration\CustomPickler.fs" />
    <Compile Include="PicklerGeneration\PicklerGenerator.fs" />
    <Compile Include="PicklerGeneration\PicklerResolution.fs" />
    <Compile Include="PicklerGeneration\PicklerCache.fs" />
    <Compile Include="Format\BinaryFormat.fs" />
    <Compile Include="Format\XmlFormat.fs" />
    <Compile Include="FsPickler\RootSerialization.fs" />
    <Compile Include="FsPickler\ObjectSizeCounter.fs" />
    <Compile Include="FsPickler\Serializer.fs" />
    <Compile Include="FsPickler\TextSerializer.fs" />
    <Compile Include="FsPickler\BinarySerializer.fs" />
    <Compile Include="FsPickler\XmlSerializer.fs" />
    <Compile Include="FsPickler\FsPickler.fs" />
    <Compile Include="FsPickler\Combinators.fs" />
    <Compile Include="FsPickler\ExtensionMethods.fs" />
    <None Include="paket.template" />
    <None Include="paket.references" />
    <None Include="Test.fsx" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '11.0'">
      <PropertyGroup Condition="Exists('$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets')">
        <FSharpTargetsPath>$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets</FSharpTargetsPath>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets')">
        <FSharpTargetsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets</FSharpTargetsPath>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <Import Project="$(FSharpTargetsPath)" />
  <Import Project="..\..\.paket\paket.targets" />
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.0' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="FSharp.Core">
          <HintPath>..\..\packages\FSharp.Core\lib\net40\FSharp.Core.dll</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
</Project>